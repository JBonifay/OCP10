<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- ===== Spring boot parent ===== -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.1.RELEASE</version>
    <relativePath /> <!-- lookup parent from repository -->
  </parent>

  <!-- ===== Informations Maven ===== -->
  <groupId>com.openclassrooms</groupId>
  <artifactId>bibliotheque</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <!-- ===== Informations générales ===== -->
  <name>Bibliotheque OC P7</name>
  <description>Projet 7 du parcours Openclassrooms DA Java</description>
  <url />
  <developers>
    <developer>
      <id>JBonifay</id>
      <name>Joffrey Bonifay</name>
      <email>joffreybonifay83@gmail.Com</email>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>


  <!-- ===== Modules ===== -->
  <modules>
    <module>config-server</module>
    <module>eureka-server</module>
    <module>zuul-server</module>

    <module>ouvrage</module>
    <module>reservation</module>
    <module>utilisateur</module>
    <module>web</module>
  </modules>

  <!-- ===== Dependencies versions ===== -->
  <properties>
    <java.version>1.8</java.version>
    <mapstruct.version>1.3.1.Final</mapstruct.version>
    <lombok.version>1.18.10</lombok.version>
    <mysql-connector-java.version>8.0.18</mysql-connector-java.version>
    <hibernate-validator.version>6.1.0.Final</hibernate-validator.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <spring-cloud>2.2.0.RELEASE</spring-cloud>
    <spring-boot-version>2.2.1.RELEASE</spring-boot-version>

    <spring-cloud-starter-netflix-eureka-server.version>${spring-cloud}</spring-cloud-starter-netflix-eureka-server.version>
    <spring-cloud-starter-netflix-eureka-client.version>${spring-cloud}</spring-cloud-starter-netflix-eureka-client.version>
    <spring-cloud-starter-netflix-zuul.version>${spring-cloud}</spring-cloud-starter-netflix-zuul.version>
    <spring-cloud-starter-config.version>${spring-cloud}</spring-cloud-starter-config.version>
    <spring-cloud-config-server.version>${spring-cloud}</spring-cloud-config-server.version>
    <spring-cloud-starter-openfeign.version>${spring-cloud}</spring-cloud-starter-openfeign.version>
    <spring-cloud-starter-security.version>${spring-cloud}</spring-cloud-starter-security.version>

    <spring-boot-configuration-processor.version>${spring-boot-version}</spring-boot-configuration-processor.version>
    <spring-boot-starter-data-jpa.version>${spring-boot-version}</spring-boot-starter-data-jpa.version>
    <spring-boot-starter-web.version>${spring-boot-version}</spring-boot-starter-web.version>
    <spring-boot-devtools.version>${spring-boot-version}</spring-boot-devtools.version>
    <spring-boot-starter-thymeleaf.version>${spring-boot-version}</spring-boot-starter-thymeleaf.version>
    <spring-boot-starter-batch.version>${spring-boot-version}</spring-boot-starter-batch.version>

    <spring-data-commons.version>${spring-boot-version}</spring-data-commons.version>
  </properties>

  <!-- ===== Dependencies ===== -->
  <dependencyManagement>
    <dependencies>

      <!-- NETFLIX StacK -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        <version>${spring-cloud-starter-netflix-eureka-server.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        <version>${spring-cloud-starter-netflix-eureka-client.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
        <version>${spring-cloud-starter-netflix-zuul.version}</version>
      </dependency>

      <!--  Spring Cloud -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-config</artifactId>
        <version>${spring-cloud-starter-config.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-config-server</artifactId>
        <version>${spring-cloud-config-server.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-openfeign</artifactId>
        <version>${spring-cloud-starter-openfeign.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-security</artifactId>
        <version>${spring-cloud-starter-security.version}</version>
      </dependency>

      <!--  Spring boot -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-configuration-processor</artifactId>
        <version>${spring-boot-configuration-processor.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
        <version>${spring-boot-starter-data-jpa.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring-boot-starter-web.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <version>${spring-boot-devtools.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-thymeleaf</artifactId>
        <version>${spring-boot-starter-thymeleaf.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-batch</artifactId>
        <version>${spring-boot-starter-batch.version}</version>
      </dependency>


      <!-- Data -->
      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-commons</artifactId>
        <version>${spring-data-commons.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate-validator.version}</version>
      </dependency>

      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql-connector-java.version}</version>
      </dependency>

      <!--  Others  -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>


    </dependencies>
  </dependencyManagement>

  <!-- ===== Build config ===== -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
            <annotationProcessorPaths>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </path>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
              </path>
            </annotationProcessorPaths>
            <compilerArgs>
              <compilerArg>
                -Amapstruct.defaultComponentModel=spring
              </compilerArg>
            </compilerArgs>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>