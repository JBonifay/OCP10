<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- ===== Spring boot parent ===== -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.2.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <!-- ===== Informations Maven ===== -->
  <artifactId>bibliotheque</artifactId>
  <groupId>com.openclassrooms</groupId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <!-- ===== Informations générales ===== -->
  <name>Bibliotheque OC P10</name>
  <description>Projet 10 du parcours Openclassrooms DA Java</description>
  <developers>
    <developer>
      <email>joffreybonifay83@gmail.com</email>
      <id>JBonifay</id>
      <name>Joffrey Bonifay</name>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <!-- ===== Modules ===== -->
  <modules>
    <module>edgeservice-eureka</module>
    <module>edgeservice-zuul</module>

    <module>microservice-ouvrage</module>
    <module>microservice-reservation</module>
    <module>microservice-utilisateur</module>
    <module>microservice-web</module>
  </modules>

  <!-- ===== Dependencies versions ===== -->
  <properties>
    <!--  Project  -->
    <revision>2.0.0</revision>
    <java.version>1.8</java.version>

    <!--  Dependencies  -->
    <spring-boot-dependencies.version>2.2.7.RELEASE</spring-boot-dependencies.version>
    <spring-cloud.version>Hoxton.SR3</spring-cloud.version>
    <org.mapstruct.version>1.3.1.Final</org.mapstruct.version>
    <jjwt.version>0.9.1</jjwt.version>
    <h2.version>1.4.200</h2.version>

    <!--  Sonarqube  -->

  </properties>

  <!-- ===== Dependencies ===== -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot-dependencies.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${org.mapstruct.version}</version>
      </dependency>

      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt</artifactId>
        <version>${jjwt.version}</version>
      </dependency>

      <!--  Test  -->
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2.version}</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <!-- ===== Build config ===== -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <groupId>org.springframework.boot</groupId>
        </plugin>

        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <annotationProcessorPaths>
              <path>
                <artifactId>lombok</artifactId>
                <groupId>org.projectlombok</groupId>
                <version>${lombok.version}</version>
              </path>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${org.mapstruct.version}</version>
              </path>
            </annotationProcessorPaths>
            <compilerArgs>
              <compilerArg>
                -Amapstruct.defaultComponentModel=spring
              </compilerArg>
            </compilerArgs>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>

      <!--  FailSafe  -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!--suppress UnresolvedMavenProperty -->
          <argLine>${failsafe.jacoco.args}</argLine>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--  SureFire  -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!--suppress UnresolvedMavenProperty -->
          <argLine>${surefire.jacoco.args}</argLine>
        </configuration>
      </plugin>


      <!-- JaCoCo -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.5</version>
        <executions>
          <execution>
            <id>before-unit-test-execution</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${sonar.jacoco.reportPath}</destFile>
              <propertyName>surefire.jacoco.args</propertyName>
            </configuration>
          </execution>

          <execution>
            <id>after-unit-test-execution</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${sonar.jacoco.reportPath}</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
            </configuration>
          </execution>

          <execution>
            <id>before-integration-test-execution</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${sonar.jacoco.reportPath}</destFile>
              <propertyName>failsafe.jacoco.args</propertyName>
            </configuration>
          </execution>

          <execution>
            <id>after-integration-test-execution</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${sonar.jacoco.reportPath}</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
            </configuration>
          </execution>

        </executions>
      </plugin>
    </plugins>
  </build>

</project>
